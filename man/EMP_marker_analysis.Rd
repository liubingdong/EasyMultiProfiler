% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analysis_EMP_marker.R
\name{EMP_marker_analysis}
\alias{EMP_marker_analysis}
\title{Marker discover based on classify or regression model}
\usage{
EMP_marker_analysis(
  obj,
  experiment,
  method,
  estimate_group = NULL,
  seed = 123,
  nfolds = 5,
  lambda_select = "lambda.min",
  max.depth = 6,
  eta = 0.3,
  nrounds = 50,
  xgboost_run = NULL,
  objective = NULL,
  verbose = 0,
  use_cached = TRUE,
  action = "add",
  ...
)
}
\arguments{
\item{obj}{Object in EMPT or MultiAssayExperiment format.}

\item{experiment}{A character string. Experiment name in the MultiAssayExperiment object.}

\item{method}{A character string. Method includs boruta, randomforest, xgboost, lasso.}

\item{estimate_group}{A character string. Select the group name in the coldata to be calculated.}

\item{seed}{An interger. Set the random seed to the plot.}

\item{nfolds}{An interger. Only actived when method = 'lasso'. More imformation in glmnet::cv.glmnet.}

\item{lambda_select}{A character string including lambda.min or lambda.1se. Only actived when method = 'lasso'. More imformation in glmnet::cv.glmnet.}

\item{max.depth}{An interger (default:6). Only actived when method = 'xgboost'. More imformation in xgboost::xgboost.}

\item{eta}{A number (0.3). Only actived when method = 'xgboost'. More imformation in xgboost::xgboost.}

\item{nrounds}{An interger (default:50). Only actived when method = 'xgboost'. More imformation in xgboost::xgboost.}

\item{xgboost_run}{An character string.Parameter xgboost_run need specify classify or regression and select the suitable parameter objective. More imformation in xgboost::xgboost.}

\item{objective}{An character string. Only actived when method = 'xgboost'. More imformation in xgboost::xgboost. eg. binary:logistic for two categories classify,multi:softmax for multible categories classify and reg:squarederror for linear regression.}

\item{verbose}{An interger (default:0). Only actived when method = 'xgboost'. More imformation in xgboost::xgboost.}

\item{use_cached}{A boolean. Whether the function use the results in cache or re-compute.}

\item{action}{A character string. Whether to join the new information to the EMPT (add), or just get the detailed result generated here (get).}

\item{...}{Further parameters passed to the function \code{\link[Boruta]{Boruta}}, \code{\link[randomForest]{randomForest}}, \code{\link[xgboost]{xgboost}} and \code{\link[glmnet]{cv.glmnet}}.}
}
\value{
EMPT object
}
\description{
Marker discover based on classify or regression model
}
\examples{
data(MAE)
## To estimate the improtance of feature by Boruta algorithm
MAE |>
  EMP_marker_analysis(experiment = 'geno_ec',method = 'boruta',
                      estimate_group = 'Group') |>
  EMP_filter(feature_condition = Boruta_decision!= 'Rejected') ## select the Confirmed and Tentative feature

## regression or classify by randomforest
MAE |>
  EMP_marker_analysis(experiment = 'geno_ec',method = 'randomforest',
                      estimate_group = 'Group') 

MAE |>
  EMP_marker_analysis(experiment = 'geno_ec',method = 'randomforest',
                      estimate_group = 'Education_Years') 

## regression or classify by xgboost
### For regression
MAE |>
  EMP_marker_analysis(experiment = 'geno_ec',method = 'xgboost',xgboost_run='regression',
                      estimate_group = 'Education_Years',objective = 'reg:squarederror')
### For two categories classify
MAE |>
  EMP_marker_analysis(experiment = 'geno_ec',method = 'xgboost',xgboost_run='classify',
                      estimate_group = 'Group',objective = 'binary:logistic')
### For multible categories classify
MAE |>
  EMP_marker_analysis(experiment = 'geno_ec',method = 'xgboost',xgboost_run='classify',
                      estimate_group = 'Status',objective = 'multi:softmax',
                      num_class=3) ## num_class is necessary
## Lasso regression
MAE |>
  EMP_marker_analysis(experiment = 'geno_ko',method = 'lasso',estimate_group = 'Education_Years') |>
  EMP_filter(feature_condition = lasso_coe >0) # Select the imprortant feature
}
