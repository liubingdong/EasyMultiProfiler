% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Analysis_EMP_cluster.R
\name{EMP_cluster_analysis}
\alias{EMP_cluster_analysis}
\title{Identify clusters for sample or feature}
\usage{
EMP_cluster_analysis(
  obj,
  experiment = NULL,
  distance = "bray",
  rowdata = FALSE,
  pseudodist = 1,
  method = "average",
  h = NULL,
  groupLabels = TRUE,
  use_cached = TRUE,
  action = "add"
)
}
\arguments{
\item{obj}{Object in EMPT or MultiAssayExperiment format.}

\item{experiment}{A character string. Experiment name in the MultiAssayExperiment object.}

\item{distance}{A character string.Dissimilarity index, partial match to "manhattan", "euclidean", "canberra", "clark", "bray", "kulczynski", "jaccard", "gower", "altGower", "morisita", "horn", "mountford", "raup", "binomial", "chao", "cao", "mahalanobis", "chisq", "chord", "hellinger", "aitchison", or "robust.aitchison".}

\item{rowdata}{A boolean. Whether the function cluster the feature or not.}

\item{pseudodist}{A number between 0 and 1 to replace the NA distance in case that some NA value exist.}

\item{method}{The agglomeration method to be used. This should be (an unambiguous abbreviation of) one of "ward.D", "ward.D2", "single", "complete", "average" (= UPGMA), "mcquitty" (= WPGMA), "median" (= WPGMC) or "centroid" (= UPGMC).}

\item{h}{A numeric. Height at which to cut tree (passed to cutree)}

\item{groupLabels}{A boolean. Whether show the group label or not.}

\item{use_cached}{A boolean. Whether the function use the results in cache or re-compute.}

\item{action}{A character string.A character string. Whether to join the new information to the EMPT (add), or just get the detailed result generated here (get).}
}
\value{
EMPT object
}
\description{
Identify clusters for sample or feature
}
\examples{
\dontrun{
data(MAE)
## Cluster the samples according to the assay data
MAE |>
  EMP_assay_extract(experiment = 'geno_ec') |>
  EMP_cluster_analysis()

MAE |>
  EMP_assay_extract(experiment = 'geno_ec') |>
  EMP_cluster_analysis(h=0.15) # identify the outlier samples

MAE |>
  EMP_assay_extract(experiment = 'geno_ec') |>
  EMP_cluster_analysis(h=0.15) |>
  EMP_filter(sample_condition = cluster != 1) # filter away the outlier

## Cluster the samples according to the coldata
MAE |> 
  EMP_coldata_extract(action = 'add') |> # transfer the coldata to asaay
  EMP_impute(assay = T) |> # impute missing value
  EMP_cluster_analysis(method = 'ward.D2',distance='clark',h=0.2) 

## Cluster the features according to the assay data
MAE |> 
  EMP_assay_extract(experiment = 'geno_ec',pattern='1.1.1.1',pattern_ref='feature') |>
  EMP_cluster_analysis(rowdata = T,h=0.8)
}
}
