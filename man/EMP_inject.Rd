% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Support_EMP_function.R
\name{EMP_inject}
\alias{EMP_inject}
\title{Inject external result into EMPT}
\usage{
EMP_inject(
  obj,
  value,
  value_name,
  affect_when_sample_changed = 1,
  affect_when_feature_changed = 1,
  attribute,
  attribute2 = "normal",
  source = "user_import"
)
}
\arguments{
\item{obj}{EMPT}

\item{value}{A data frame or tibble from the external result.}

\item{value_name}{A character string. Set the name of external result to inject into EMPT project.}

\item{affect_when_sample_changed}{0 or 1. 0 means that the result is not influenced by sample changes, while 1 means the contrary.}

\item{affect_when_feature_changed}{0 or 1. 0 means that the result is not influenced by feature changes, while 1 means the contrary.}

\item{attribute}{A character string inculding primary, feature, all. This parameter indicates whether the result is about primary, feature or all.}

\item{attribute2}{A character string inculding normal, diagonal or none. This parameter indicates the format of result.}

\item{source}{A character string. Set the name of the analysis which generate the result. (default: user_import)}
}
\description{
Inject external result into EMPT
}
\examples{
data(MAE)

## inject external result into EMPT
### get a EMPT object
MAE |> 
  EMP_assay_extract('taxonomy') |>
  EMP_collapse(estimate_group = 'Genus',method = 'sum',
               collapse_by = 'row',action = 'add') -> obj  

### get the raw data from the EMPT
MAE |> 
  EMP_assay_extract('taxonomy') |>
  EMP_collapse(estimate_group = 'Genus',method = 'sum',
               collapse_by = 'row',action = 'get') -> assay_data  

### caculate the result from other packages
assay_data <- assay_data |> tibble::column_to_rownames('primary')
shannon_index <- vegan::diversity(assay_data,index = 'shannon') 
new_result <- tibble::tibble(primary=names(shannon_index),new_shannon=shannon_index)

### inject the new result into EMPT object
obj |>
  EMP_inject(value = new_result,value_name = 'new_alpha',
             affect_when_sample_changed=0,
             affect_when_feature_changed=1,
             attribute='primary',
             attribute2='normal',source='user_import') |>
  EMP_filter(sample_condition  = new_shannon >2)
}
